import os
from datetime import datetime

MILES_CURRENCY_CODE = "RR"
CURRENCIES = { 'RUB': "\u20BD", 'USD': "\u0024", 'EUR': "\u20AC", MILES_CURRENCY_CODE: "—Ä—Ä." }
MAX_TITLE_LENGTH = 25
BREAK_LINE = '---'


def currency(c):
    return CURRENCIES[c] if c in CURRENCIES else c


def money(amount, cur, show_plus = False):
    result = str(amount) + ' ' + currency(cur)
    if amount > 0 and show_plus:
        return "+" + result
    return result


def feed_title(title):
    if len(title) > MAX_TITLE_LENGTH:
        return title[0:MAX_TITLE_LENGTH] + '...'
    else:
        return title


def transaction(tr):
    info = tr[1]

    display_money = money(info['display_money']['amount'], info['display_money']['currency_code'])
    merchant = info['merchant']

    result = display_money
    result += " "
    result += feed_title(merchant['name'])

    result += '|length=45'

    return result


def transaction_status(status):
    if status == "hold":
        return "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ"
    if status == "confirmed":
        return "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ"
    return None


def transaction_details(tr):
    info = tr[1]

    rows = []

    ts = datetime.fromtimestamp(info['happened_at'])
    rows.append("üìÜ " + ts.strftime("%d.%m.%Y %H:%m"))

    if info['mimimiles'] != 0:
        rows.append(money(info['mimimiles'], MILES_CURRENCY_CODE, show_plus=True))

    if info['comment']:
        rows.append(info['comment'])

    rows.append(BREAK_LINE)

    status = transaction_status(info['status'])

    if status != None:
        rows.append("–°—Ç–∞—Ç—É—Å: " + status)

    rows.append("–ö–∞—Ç–µ–≥–æ—Ä–∏—è: " + info['category']['display_name'])

    if info['has_receipt']:
        rows.append(BREAK_LINE)
        rows.append('üì† –ö–≤–∏—Ç–∞–Ω—Ü–∏—è|href=' + info['receipt_url'])

    return rows


def sub_level(string, level = 1):
    result = ""

    for x in range(1, level):
        result += "--"

    if string == BREAK_LINE:
        result += "---"
        return result
    else:
        result += " " + string
        return result


def friends(friends_count):
    return "–î—Ä—É–∑–µ–π –≤ –†–æ–∫–µ—Ç–±–∞–Ω–∫–µ: " + str(friends_count)


def push(push_item):
    info = push_item[1]
    return info['body']


def safe_account(account):
    return money(account['balance'], account['currency']) + ' (' + account['title'] + ')'


def get_account_details(account):
    d = account['account_details']
    rows = []
    if account['currency'] == 'RUB':
        rows.append('–ë–ò–ö: ' + str(d['bic']))
        rows.append('–ë–∞–Ω–∫: ' + str(d['bank_name']))
        rows.append('–ö–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π —Å—á–µ—Ç: ' + str(d['ks']))
        rows.append('–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞: ' + str(d['account']))
        rows.append('–ü–æ–ª—É—á–∞—Ç–µ–ª—å: ' + str(d['owner']))
        rows.append('–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞: ' + str(d['goal']))
        rows.append('–ò–ù–ù: ' + str(d['inn']))
        rows.append('–ö–ü–ü: ' + str(d['kpp']))
    else:
        rows.append('–ë–∞–Ω–∫ –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç: ' + str(d['corr']))
        rows.append('–ë–∞–Ω–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ' + str(d['benef_bank']))
        rows.append('–ê–¥—Ä–µ—Å –±–∞–Ω–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ' + str(d['benef_bank_address']))
        rows.append('SWIFT: ' + str(d['benef_swift']))
        rows.append('–ü–æ–ª—É—á–∞—Ç–µ–ª—å: ' + str(d['owner']))
        rows.append('–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞: ' + str(d['account']))

    return rows


def get_deposit_currency(deposit_item):
    return deposit_item['rocket_deposit']['currency']


def deposit(deposit_item):
    d_currency = get_deposit_currency(deposit_item)
    return money(deposit_item['balance'], d_currency) + ' (' + deposit_item['title'] + ')'


def deposit_statement(statement_item, curr):
    return money(statement_item['amount'], curr, show_plus=True) + ' ' + statement_item['description']


def get_install_link():
    return os.path.dirname(os.path.realpath(__file__)) + "/INSTALLER"


def app_version(version, build):
    return '–í–µ—Ä—Å–∏—è ' + version + ' (' + str(build) + ')'


def new_version(available = False, nvjson = {}):
    if available:
        return '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é ' + nvjson['build_label'] + '|href=' + nvjson['upgrade_faq_url']
    else:
        return '–ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π'


def re_login():
    return "–ó–∞–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫|bash=" + get_install_link()


def app_unable_to_login():
    return "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤–æ–π—Ç–∏\n–í–æ–∑–º–æ–∂–Ω–æ, –í—ã —Å–º–µ–Ω–∏–ª–∏ –∫–æ–¥ –æ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\nüì≤ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è|bash=" + get_install_link()


def app_is_not_configured():
    return "–ú—ã –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤—ã –∫ –∑–∞–ø—É—Å–∫—É! –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å!|bash=" + get_install_link()
